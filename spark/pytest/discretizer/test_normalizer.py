import pytest

from spark.config.config_set import UniversalConfigSet
from spark.discretizer.normalizer import ConfigNormalizer


def test_normalization():
    config_set = UniversalConfigSet(4, 28*1024)
    normalizer = ConfigNormalizer(config_set)
    norm_configs = normalizer.get_all_possible_normalized_configs()
    expected_config = [[1.0, 0.9743589743589743, 0.9487179487179487, 0.9230769230769231, 0.8974358974358975,
                        0.8717948717948718, 0.8461538461538461, 0.8205128205128205, 0.7948717948717948,
                        0.7692307692307693, 0.7435897435897436, 0.717948717948718, 0.6923076923076923,
                        0.6666666666666666, 0.6410256410256411, 0.6153846153846154, 0.5897435897435898,
                        0.5641025641025641, 0.5384615384615384, 0.5128205128205128, 0.48717948717948717,
                        0.46153846153846156, 0.4358974358974359, 0.41025641025641024, 0.38461538461538464,
                        0.358974358974359, 0.3333333333333333, 0.3076923076923077, 0.28205128205128205,
                        0.2564102564102564, 0.23076923076923078, 0.20512820512820512, 0.1794871794871795,
                        0.15384615384615385, 0.1282051282051282, 0.10256410256410256, 0.07692307692307693,
                        0.05128205128205128, 0.02564102564102564, -0.0],
                       [1.0, 0.972972972972973, 0.945945945945946, 0.918918918918919, 0.8918918918918919,
                        0.8648648648648649, 0.8378378378378379, 0.8108108108108109, 0.7837837837837838,
                        0.7567567567567568, 0.7297297297297298, 0.7027027027027027, 0.6756756756756757,
                        0.6486486486486487, 0.6216216216216217, 0.5945945945945946, 0.5675675675675675,
                        0.5405405405405406, 0.5135135135135136, 0.4864864864864865, 0.4594594594594595,
                        0.43243243243243246, 0.40540540540540543, 0.3783783783783784, 0.35135135135135137,
                        0.32432432432432434, 0.2972972972972973, 0.2702702702702703, 0.24324324324324326,
                        0.21621621621621623, 0.1891891891891892, 0.16216216216216217, 0.13513513513513514,
                        0.10810810810810811, 0.08108108108108109, 0.05405405405405406, 0.02702702702702703, -0.0],
                       [1.0, 0.9629629629629629, 0.9259259259259258, 0.8888888888888888, 0.8518518518518519,
                        0.8148148148148148, 0.7777777777777777, 0.7407407407407407, 0.7037037037037037,
                        0.6666666666666666, 0.6296296296296295, 0.5925925925925926, 0.5555555555555556,
                        0.5185185185185185, 0.48148148148148145, 0.4444444444444444, 0.4074074074074074,
                        0.37037037037037035, 0.3333333333333333, 0.2962962962962963, 0.25925925925925924,
                        0.2222222222222222, 0.18518518518518517, 0.14814814814814814, 0.1111111111111111,
                        0.07407407407407407, 0.037037037037037035, -0.0], [1.0, 0.5, -0.0]]

    assert norm_configs == expected_config


def test_denormalization():
    config_set = UniversalConfigSet(4, 28*1024)
    normalizer = ConfigNormalizer(config_set)
    norm_configs = normalizer.get_all_possible_normalized_configs()
    denorm_config = normalizer.denormalize_config(norm_configs)
    i = 0
    for param in config_set.get_params():
        domain = param.get_domain()
        assert sorted(domain.get_possible_values()) == sorted(denorm_config[i])
        i = i + 1
